@using Seguricel3.Models;
@using Resources;
@model LoginViewModel

@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<script type="text/javascript">
    // Original script by Josh Fraser (http://www.onlineaspect.com)
    // Some customization applied in this script code
    $(document).ready(function () {
        var minutes;
        var rightNow = new Date();
        var jan1 = new Date(rightNow.getFullYear(), 0, 1, 0, 0, 0, 0);  // jan 1st
        var june1 = new Date(rightNow.getFullYear(), 6, 1, 0, 0, 0, 0); // june 1st
        var temp = jan1.toGMTString();
        var jan2 = new Date(temp.substring(0, temp.lastIndexOf(" ") - 1));
        temp = june1.toGMTString();
        var june2 = new Date(temp.substring(0, temp.lastIndexOf(" ") - 1));
        var std_time_offset = (jan1 - jan2) / (1000 * 60 * 60);
        var daylight_time_offset = (june1 - june2) / (1000 * 60 * 60);
        var dst;
        if (std_time_offset == daylight_time_offset) {
            dst = "0"; // daylight savings time is NOT observed
        } else {
            // positive is southern, negative is northern hemisphere
            var hemisphere = std_time_offset - daylight_time_offset;
            if (hemisphere >= 0)
                std_time_offset = daylight_time_offset;
            dst = "1"; // daylight savings time is observed
        }
        var i;
        // Here set the value of hidden field to the ClientTimeZone.
        minutes = convert(std_time_offset);
        $('#ClientTimeZone').val(minutes);
    });

    function convert(value) {
        var hours = parseInt(value);
        value -= parseInt(value);
        value *= 60;
        var mins = parseInt(value);
        value -= parseInt(value);
        value *= 60;
        var secs = parseInt(value);
        var display_hours = hours;
        var display_mins = mins;
        // handle GMT case (00:00)
        if (hours == 0) {
            display_hours = "00";
        } else if (hours > 0) {
            // add a plus sign and perhaps an extra 0
            display_hours = (hours < 10) ? "+0" + hours : "+" + hours;
        } else {
            // add an extra 0 if needed
            display_hours = (hours > -10) ? "-0" + Math.abs(hours) : hours;
        }
        if (mins == 0) {
            display_mins = "00";
        } else if (mins > 0) {
            // add a plus sign and perhaps an extra 0
            display_mins = (mins < 10) ? "+0" + mins : "+" + mins;
        } else {
            // add an extra 0 if needed
            display_mins = (mins > -10) ? "-0" + Math.abs(mins) : mins;
        }

        return display_hours + ":" + display_mins;
    }
</script>

<div>
    <div class="row" style="width: 70%; margin: auto;">
        <div class="col-md-11" style="margin-top: 150px;">
            <h2 style="margin: auto;">@ViewBag.Title.</h2>
        </div>
        <div>
            <div class="col-md-11" style="border: 1px solid #808080; border-radius: 10px;">
                <section id="loginForm">
                    @using (Html.BeginForm("Login", "Account", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
                    {

                        @Html.HiddenFor(m => m.UserTimeZone, new { id = "ClientTimeZone", name = "ClientTimeZone" })

                        @Html.AntiForgeryToken()
                        <h4>@Model.LoginSubtitle</h4>
                        <hr />
                        @Html.ValidationSummary(true, Model.ValidationSummaryText, htmlAttributes: new { @class = "text-danger", @style = "font-size: 18pt; font-weight: bold;" })
                        <div class="form-group">
                            @Html.LabelFor(m => m.Email, new { @class = "col-md-2 control-label" })
                            <div class="col-md-10">
                                @Html.TextBoxFor(m => m.Email, new { @class = "form-control" })
                                @Html.ValidationMessageFor(m => m.Email, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(m => m.Password, new { @class = "col-md-2 control-label" })
                            <div class="col-md-10">
                                @Html.PasswordFor(m => m.Password, new { @class = "form-control" })
                                @Html.ValidationMessageFor(m => m.Password, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="col-md-10">
                                <table style="margin: auto;">
                                    <tr>
                                        <td>
                                            @Html.CheckBoxFor(m => m.RememberMe)
                                        </td>
                                        <td style="padding-left: 20px;">
                                            @Html.LabelFor(m => m.RememberMe)
                                        </td>
                                    </tr>
                                </table>
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="col-md-10" style="float: right; width: 15%;">
                                <input type="submit" value=@Model.submitButtonText class="btn btn-default" />
                            </div>
                        </div>
                        @*<p>
                                @Html.ActionLink(Model.RegistrarNuevoUsuarioLabel, "Register")
                            </p>*@
                        <p>
                            @Html.ActionLink(Model.ForgotPasswordText, "ForgotPassword")
                        </p>
                    }
                </section>
            </div>
            @*<div class="col-md-4">
                    <section id="socialLoginForm">
                        @Html.Partial("_ExternalLoginsListPartial", new ExternalLoginListViewModel { ReturnUrl = ViewBag.ReturnUrl })
                    </section>
                </div>*@
        </div>
        <div class="row" style="width: 70%; margin: auto; margin-top: 50px;">
            <div class="col-md-11" style="text-align:justify; font-weight: bold; font-size: 10pt;">
                @Model.CookieWarningMessage
            </div>
        </div>
    </div>
</div>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
