@using Seguricel3.Models;
@using Resources;
@model LoginViewModel

<script type="text/javascript">
    // Original script by Josh Fraser (http://www.onlineaspect.com)
    // Some customization applied in this script code
    $(document).ready(function () {
        var minutes;
        var rightNow = new Date();
        var jan1 = new Date(rightNow.getFullYear(), 0, 1, 0, 0, 0, 0);  // jan 1st
        var june1 = new Date(rightNow.getFullYear(), 6, 1, 0, 0, 0, 0); // june 1st
        var temp = jan1.toGMTString();
        var jan2 = new Date(temp.substring(0, temp.lastIndexOf(" ") - 1));
        temp = june1.toGMTString();
        var june2 = new Date(temp.substring(0, temp.lastIndexOf(" ") - 1));
        var std_time_offset = (jan1 - jan2) / (1000 * 60 * 60);
        var daylight_time_offset = (june1 - june2) / (1000 * 60 * 60);
        var dst;
        if (std_time_offset == daylight_time_offset) {
            dst = "0"; // daylight savings time is NOT observed
        } else {
            // positive is southern, negative is northern hemisphere
            var hemisphere = std_time_offset - daylight_time_offset;
            if (hemisphere >= 0)
                std_time_offset = daylight_time_offset;
            dst = "1"; // daylight savings time is observed
        }
        var i;
        // Here set the value of hidden field to the ClientTimeZone.
        minutes = convert(std_time_offset);
        $('#ClientTimeZone').val(minutes);
    });
    function convert(value) {
        var hours = parseInt(value);
        value -= parseInt(value);
        value *= 60;
        var mins = parseInt(value);
        value -= parseInt(value);
        value *= 60;
        var secs = parseInt(value);
        var display_hours = hours;
        var display_mins = mins;
        // handle GMT case (00:00)
        if (hours == 0) {
            display_hours = "00";
        } else if (hours > 0) {
            // add a plus sign and perhaps an extra 0
            display_hours = (hours < 10) ? "+0" + hours : "+" + hours;
        } else {
            // add an extra 0 if needed
            display_hours = (hours > -10) ? "-0" + Math.abs(hours) : hours;
        }
        if (mins == 0) {
            display_mins = "00";
        } else if (mins > 0) {
            // add a plus sign and perhaps an extra 0
            display_mins = (mins < 10) ? "+0" + mins : "+" + mins;
        } else {
            // add an extra 0 if needed
            display_mins = (mins > -10) ? "-0" + Math.abs(mins) : mins;
        }

        return display_hours + ":" + display_mins;
    }
</script>

@*@using (Html.BeginForm())*@
@*<button id="submitButton" class="btn btn-default place-right" style="width: 100px;">@Model.submitButtonText</button>*@

<div class="padding10">

    @using (Html.BeginForm("Login", "Account", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
    {

        @Html.HiddenFor(m => m.UserTimeZone, new { id = "ClientTimeZone", name = "ClientTimeZone" })
        @Html.AntiForgeryToken()

        <h4 class="text-light">@Model.LoginSubtitle</h4>
        <hr />
        <div>
            @Html.ValidationSummary(true, Model.ValidationSummaryText, htmlAttributes: new { @class = "text-danger", @style = "font-size: 18pt; font-weight: bold;" })
            <div class="input-control text">
                <span class="mif-user prepend-icon"></span>
                @Html.TextBoxFor(m => m.Email, new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.Email, "", new { @class = "text-danger" })
            </div>
            <div class="input-control text">
                <span class="mif-lock prepend-icon"></span>
                @Html.PasswordFor(m => m.Password, new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.Password, "", new { @class = "text-danger" })
            </div>
        </div>
        <div style="margin-top: 30px;">
            <div class="form-actions">
                <input id="submitButton" type="submit" value=@Model.submitButtonText class="btn btn-default place-right" style="width: 100px;" />
            </div>
            <div>
                @Html.ActionLink(Model.ForgotPasswordText, "ForgotPassword", null, new { @style = "font-size: 10pt; " })
            </div>
        </div>
    }
</div>